<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ehcache.xsd">
    
	<!-- <diskStore>表示当内存缓存中对象数量超过类设置内存缓存数量时，将缓存对象写到硬盘，path=”java.io.tmpdir”表示把数据写到这个目录下。
Java.io.tmpdir目录在运行时会根据相对路径生成。
<defaultCache>表示设定缓存的默认数据过期策略。
    <cache>表示设定用具体的命名缓存的数据过期策略。

    name表示具体的缓存命名。
    maxElementsInMemory表示cache中最大允许保存的对象数据量。
    eternal:一旦设置了eternal=true，timeToLive和timeToIdle就失效了，缓存里的数据，只有当缓存满的时候，才有可能被清除。
    如果我们想手动给某一条数据设置过期时间，则我们需要把eternal的值设为false。
    timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效， 
如果该值是 0 就意味着元素可以停顿无穷长的时间。
    timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，
    这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。 overflowToDisk：内存不足时，是否启用磁盘缓存。
    memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
    
	<diskStor path="java.io.tmpdir" /> -->
	
	<defaultCache
		maxElementsInMemory="10000"
        eternal="false"
        timeToIdleSeconds="8640000"
        timeToLiveSeconds="8640000"
        overflowToDisk="false"
	/>
	   
	 <cache name="placeTreeList"  
           maxElementsOnDisk="8640000"  
           maxElementsInMemory="8640000"  
           eternal="true"  
           overflowToDisk="true"  
           diskPersistent="true"/>
    <cache name="placeTree"  
           maxElementsOnDisk="8640000"  
           maxElementsInMemory="8640000"  
           eternal="true"  
           overflowToDisk="true"  
           diskPersistent="true"/>
	<cache name="myCache"  
           maxElementsOnDisk="40000"  
           maxElementsInMemory="40000"  
           eternal="true"  
           overflowToDisk="true"  
           diskPersistent="true"/>
</ehcache>