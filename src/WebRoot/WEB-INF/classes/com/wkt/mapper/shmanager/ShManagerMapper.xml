<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wkt.dao.shmanager.IShManagerDao">
	<!-- 查询商会总条数 -->
	<select id="findShanghuiCount" parameterType="java.util.HashMap" resultType="Integer">	
		SELECT
			COUNT(*) count
		FROM
			PRE_COMMON_SHANGHUI t
		WHERE t.`STATUS`= 1
		<if test="caid !=null and caid !=''">
			AND (t.shid IN (
				SELECT
					cs.SHANGHUIID
				FROM
					PRE_OAM_CATEGORYORSHANGHUI cs
				WHERE
					cs.CATEGORYID IN (
						SELECT
							ca.GOID
						FROM
							PRE_OAM_CATEGORY_COMMERCIAL ca
						WHERE
							ca.CAID = #{caid}
					)
			)
			OR t.SHID IN (
				SELECT
					p.SHANGHUIID
				FROM
					PRE_OAM_SHANGHUIORASSOCIATION p
				WHERE
					p.ASSOCIATIONID = #{caid}
			))
		</if>
		<if test="title != null and title != ''">
			AND t.SHNAME like '%${title}%' 
		</if>
		<if test="start_time != null and start_time != ''">
			<![CDATA[   and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d')>=  DATE_FORMAT(#{start_time}, '%Y-%m-%d')   ]]>
		</if>
		<if test="end_time != null and end_time != ''">
			<![CDATA[and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d') <=  DATE_FORMAT(#{end_time}, '%Y-%m-%d')]]>
		</if>
	</select>
	<!-- 查询商会列表 -->
	<select id="findShanghuiList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.shid,
			t.shname,
			t.chairmanname,
			t.website,
			t.address,
			t.introduction,
			t.status,
			t.logourl,
			t.groupid,
			DATE_FORMAT(t.createdate, '%Y-%m-%d %k:%i:%s') createdate,
			t.shmobile
		FROM
			PRE_COMMON_SHANGHUI t
		WHERE t.`STATUS`= 1
		<if test="caid !=null and caid !=''">
			AND (t.shid IN (
				SELECT
					cs.SHANGHUIID
				FROM
					PRE_OAM_CATEGORYORSHANGHUI cs
				WHERE
					cs.CATEGORYID IN (
						SELECT
							ca.GOID
						FROM
							PRE_OAM_CATEGORY_COMMERCIAL ca
						WHERE
							ca.CAID = #{caid}
					)
			)
			OR t.SHID IN (
				SELECT
					p.SHANGHUIID
				FROM
					PRE_OAM_SHANGHUIORASSOCIATION p
				WHERE
					p.ASSOCIATIONID = #{caid}
			))
		</if>
		<if test="title != null and title != ''">
			AND t.SHNAME like '%${title}%' 
		</if>
		<if test="start_time != null and start_time != ''">
			<![CDATA[   and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d')>=  DATE_FORMAT(#{start_time}, '%Y-%m-%d')   ]]>
		</if>
		<if test="end_time != null and end_time != ''">
			<![CDATA[and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d') <=  DATE_FORMAT(#{end_time}, '%Y-%m-%d')]]>
		</if>
		ORDER BY
			t.CREATEDATE desc
		<if test="y != null and y != ''">
			LIMIT ${x},${y}
		</if>
	</select>

	<!-- 查询商会详情 -->
	<select id="findShanghuiDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.shid,
			t.shname,
			t.chairmanname,
			t.website,
			t.address,
			t.introduction,
			t.status,
			t.logourl,
			t.groupid,
			DATE_FORMAT(t.createdate, '%Y-%m-%d %k:%i:%s') createdate,
			t.shmobile
		FROM
			PRE_COMMON_SHANGHUI t
		WHERE
			t.shid = #{id}
	</select>
	<!-- 新增商会-->
	<insert id="insertShanghui" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO PRE_COMMON_SHANGHUI (
			shname,
			chairmanname
			<if test="website != null and website != ''">
				,website
			</if>
			,address
			<if test="introduction != null and introduction != ''">
				,introduction
			</if>
			,status
			<if test="logourl != null and logourl != ''">
				,logourl
			</if>
			<if test="groupid != null and groupid != ''">
				,groupid
			</if>
			<if test="calogo != null and calogo != ''">
				,calogo
			</if>
			,createdate
			<if test="shmobile != null and shmobile != ''">
				,shmobile
			</if>
		)
		VALUES
			(
				 #{shname}
				,#{chairmanname}
				<if test="website != null and website != ''">
					,#{website}
				</if>
				,#{address}
				<if test="introduction != null and introduction != ''">
					,#{introduction}
				</if>
				,1
				<if test="logourl != null and logourl != ''">
					,#{logourl}
				</if>
				<if test="groupid != null and groupid != ''">
					,#{groupid}
				</if>
				<if test="calogo != null and calogo != ''">
					,#{calogo}
				</if>
				,#{createdate}
				<if test="shmobile != null and shmobile != ''">
					,#{shmobile}
				</if>
			)
	</insert>
	<!-- 修改商会 -->
	<update id="updateShanghui" parameterType="java.util.HashMap">
		UPDATE PRE_COMMON_SHANGHUI
		SET shname = #{shname}
			<if test="chairmanname != null and chairmanname != ''">
				,chairmanname = #{chairmanname}
			</if>
			<if test="website != null and website != ''">
				,website = #{website}
			</if>
			<if test="address != null and address != ''">
				,address = #{address}
			</if>
			<if test="introduction != null and introduction != ''">
				,introduction = #{introduction}
			</if>
			<if test="logourl != null and logourl != ''">
				,logourl = #{logourl}
			</if>
			<if test="groupid != null and groupid != ''">
				,groupid = #{groupid}
			</if>
			<if test="status != null and status != ''">
				,status = #{status}
			</if>
			<if test="calogo != null and calogo != ''">
				,calogo = #{calogo}
			</if>
			<if test="shmobile != null and shmobile != ''">
				,shmobile = #{shmobile}
			</if>
		WHERE
			shid = #{id}
	</update>
	<!-- 删除商会 -->
	<update id="deleteShanghui" parameterType="java.util.HashMap">
		UPDATE PRE_COMMON_SHANGHUI
		SET status = #{status}
		WHERE
			shid = #{id}
	</update>
	<!-- 查询商会短信配置 -->
	<select id="getSMS" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.cfid,
			t.shid,
			t.smsallcounts,
			t.smsusedcounts,
			t.smsremaincounts,
			t.status,
			t.custcode,
			t.password,
			t.url,
			t.ydaccess,
			t.port,
			t.smsname,
			t.ltaccess,
			t.dcaccess
		FROM
			PRE_COMMON_SMSCONFIG t
		WHERE
			t.`STATUS` = 1
		  and t.shid = #{id}
	</select>
	<!-- 新增短信配置-->
	<insert id="insertSMS" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO PRE_COMMON_SMSCONFIG (
			shid,
			smsallcounts,
			smsusedcounts,
			smsremaincounts,
			status,
			custcode,
			password,
			url,
			ydaccess,
			port,
			smsname,
			ltaccess,
			dcaccess
		)
		VALUES
			(
			#{shid},
			#{smsallcounts},
			0,
			#{smsallcounts},
			1,
			#{custcode},
			#{password},
			#{url},
			#{ydaccess},
			#{port},
			#{smsname},
			#{ltaccess},
			#{dcaccess}
			)
	</insert>
	<!-- 修改短信配置 -->
	<update id="updateSMS" parameterType="java.util.HashMap">
		UPDATE PRE_COMMON_SMSCONFIG
		SET smsallcounts = #{smsallcounts},
			smsusedcounts = #{smsusedcounts},
			smsremaincounts = #{smsremaincounts},
			custcode = #{custcode},
			password = #{password},
			url = #{url},
			ydaccess = #{ydaccess},
			port = #{port},
			smsname = #{smsname},
			ltaccess = #{ltaccess},
			dcaccess = #{dcaccess}
		WHERE
			shid = #{shid}
	</update>
	
	<!-- 查询查询行业分类总条数 -->
	<select id="findClassificationCount" parameterType="java.util.HashMap" resultType="Integer">	
		SELECT
			COUNT(*) count
		from(
		SELECT
			t.id,
			t.name,
			t.fatherid,
			t.createid,
			DATE_FORMAT(t.createdate, '%Y-%m-%d %k:%i:%s') createdate,
			t.updateid,
			DATE_FORMAT(t.updatedate, '%Y-%m-%d %k:%i:%s') updatedate,
			t.state,
			t.level,
			t.nodeid,
			(select poca.CAID from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'caid',
			(select poca.CANAME from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'cname',
			(select poc2.NAME from PRE_OAM_CATEGORY poc2 where poc2.ID = t.FATHERID) as 'fathername'
		FROM
			PRE_OAM_CATEGORY t,
			PRE_OAM_CATEGORY_COMMERCIAL c
		WHERE 1=1
		  and t.STATE=1
		  and t.nodeid = c.goid
		<if test="fatherid != null and fatherid != '' and fatherid != 0">
			and t.fatherid = #{fatherid}
		</if>
		<if test="start_time != null and start_time != ''">
			<![CDATA[   and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d')>=  DATE_FORMAT(#{start_time}, '%Y-%m-%d')   ]]>
		</if>
		<if test="end_time != null and end_time != ''">
			<![CDATA[and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d') <=  DATE_FORMAT(#{end_time}, '%Y-%m-%d')]]>
		</if>) tt
		where 1=1
		<if test="title != null and title != ''">
			and tt.cname like '%${title}%' 
		</if>
	</select>
	<!-- 查询行业分类列表 -->
	<select id="findClassificationList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select 
			tt.id,
			tt.name,
			tt.fatherid,
			tt.createid,
			DATE_FORMAT(tt.createdate, '%Y-%m-%d %k:%i:%s') createdate,
			tt.updateid,
			DATE_FORMAT(tt.updatedate, '%Y-%m-%d %k:%i:%s') updatedate,
			tt.state,
			tt.level,
			tt.nodeid,
			tt.caid,
			tt.cname,
			tt.fathername
			 from
		(SELECT
			t.id,
			t.name,
			t.fatherid,
			t.createid,
			t.createdate,
			t.updateid,
			t.updatedate,
			t.state,
			t.level,
			t.nodeid,
			(select poca.CAID from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'caid',
			(select poca.CANAME from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'cname',
			(select poc2.NAME from PRE_OAM_CATEGORY poc2 where poc2.ID = t.FATHERID) as 'fathername'
		FROM
			PRE_OAM_CATEGORY t,
			PRE_OAM_CATEGORY_COMMERCIAL c
		WHERE 1=1
		  and t.STATE=1
		  and t.nodeid = c.goid
		<if test="fatherid != null and fatherid != '' and fatherid != 0">
			and t.fatherid = #{fatherid}
		</if>
		<if test="start_time != null and start_time != ''">
			<![CDATA[   and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d')>=  DATE_FORMAT(#{start_time}, '%Y-%m-%d')   ]]>
		</if>
		<if test="end_time != null and end_time != ''">
			<![CDATA[and DATE_FORMAT(t.CREATEDATE, '%Y-%m-%d') <=  DATE_FORMAT(#{end_time}, '%Y-%m-%d')]]>
		</if>) tt
		where 1=1
		<if test="title != null and title != ''">
			and tt.cname like '%${title}%' 
		</if>
		order by level asc,tt.createdate desc
		<if test="y != null and y != ''">
			LIMIT ${x},${y}
		</if>
	</select>
	<!-- 新增行业分类 -->
	<insert id="insertClassification" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO PRE_OAM_CATEGORY (
			name,
			fatherid,
			createid,
			createdate,
			state
			<if test="level != null and level != ''">
				,level
			</if>
			,nodeid
		)
		VALUES
			(
				#{name}
				,#{fatherid}
				,#{createid}
				,#{createdate}
				,1
				<if test="level != null and level != ''">
					,#{level}
				</if>
				,#{nodeid}
			)
	</insert>
	<!-- 修改行业分类 -->
	<update id="updateClassification" parameterType="java.util.HashMap">
		UPDATE PRE_OAM_CATEGORY
		SET name = #{name},updateid = #{updateid},updatedate = #{updatedate}
			<if test="fatherid != null and fatherid != ''">
				,fatherid = #{fatherid}
			</if>
		WHERE
			id = #{id}
	</update>
	<!-- 根据父亲id查询子分类信息 -->
	<select id="queryCategoryByFather" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 	 select poc.id,
				poc.name,
				poc.fatherid,
				poc.createid,
				poc.createdate,
				poc.updateid,
				poc.updatedate,
				poc.state,
				poc.level,
				poc.nodeid,
				(select poca.CAID from PRE_OAM_COMMERCIAL_ASSOCIATION poca where pocc.CAID = poca.CAID ) as 'caid',
				(select poca.CANAME from PRE_OAM_COMMERCIAL_ASSOCIATION poca where pocc.CAID = poca.CAID ) as 'cname'
		from PRE_OAM_CATEGORY poc ,PRE_OAM_CATEGORY_COMMERCIAL pocc where poc.NODEID = pocc.GOID and STATE = 1 and FATHERID = #{caid}
	</select>
	<!-- 删除行业分类 -->
	<update id="deleteClassification" parameterType="java.util.HashMap">
		UPDATE PRE_OAM_CATEGORY
		SET state = #{state}
		WHERE
			id = #{id}
	</update>
	<!-- 添加工商联分类关联 -->
	<insert id="insertCaCom" parameterType="java.util.HashMap">
		insert into PRE_OAM_CATEGORY_COMMERCIAL(CAID,GOID) values (#{caid},#{goid})
	</insert>
	<!-- 更新分类关联表 -->
	<update id="updateCaCom" parameterType="java.util.HashMap">
		update PRE_OAM_CATEGORY set LEVEL = (LEVEL+#{level}) 	
		where ID in (${ids})
	</update>
	<!-- 删除分类 -->
	<update id="deletecategory" parameterType="java.util.HashMap">
		UPDATE PRE_OAM_CATEGORY
		SET state = 2
		where ID = #{id}
	</update>
	<!-- 删除分类权限表 -->
	<delete id="deleteRoleCategory" parameterType="java.util.HashMap">
		delete from PRE_OAM_ROLE_MANAGEMENT where CAID = #{id} and TYPE = 'category'
	</delete>
	<!-- 删除分类关联 -->
	<delete id="deleteCaCom" parameterType="java.util.HashMap">
		delete from PRE_OAM_CATEGORY_COMMERCIAL where GOID = #{id}
	</delete>
	<!-- 查询行业分类列表 ztree格式-->
	<select id="findClassificationListData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.id,
			t.fatherid pId,
			CASE WHEN (
				SELECT
					count(*)
				FROM
					PRE_OAM_CATEGORY s
				WHERE
					s.fatherid = t.id
			 and s.STATE = 1
			) > 0 THEN
				'True'
			ELSE
				'False'
			END isParent,
			t.name,
			t.fatherid,
			t.createid,
			DATE_FORMAT(t.createdate, '%Y-%m-%d %k:%i:%s') createdate,
			t.updateid,
			DATE_FORMAT(t.updatedate, '%Y-%m-%d %k:%i:%s') updatedate,
			t.state,
			t.level,
			t.nodeid,
			(select poca.CAID from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'caid',
			(select poca.CANAME from PRE_OAM_COMMERCIAL_ASSOCIATION poca where c.CAID = poca.CAID ) as 'cname'
		FROM
			PRE_OAM_CATEGORY t,
			PRE_OAM_CATEGORY_COMMERCIAL c
		WHERE
			t.STATE = 1
			and t.nodeid = c.goid
		ORDER BY
			t.createdate desc
	</select>
	
	<!-- 新增商会总群 -->
	<insert id="createNewGroup"  parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		insert into PRE_COMMON_GROUP(GROUPNAME,CREATEDATE,GROUPTYPE,STATE,SHANGHUIID,HOSTNAME) values (#{groupname},now(),3,1,#{shanghuiid},'0')
	</insert>
	<!-- 修改商会是修改群组名称 -->
	<update id="updateGroupName" parameterType="java.util.HashMap">
		update PRE_COMMON_GROUP set GROUPNAME = #{shname} where SHANGHUIID = #{shid} and HOSTNAME = 0 and GROUPTYPE = 3
	</update>
	<!-- 删除群-->
	<delete id="deleteGroup" parameterType="java.util.HashMap">
		delete from PRE_COMMON_GROUP where SHANGHUIID = #{shid} and HOSTNAME = 0 and GROUPTYPE IN (2,3)
	</delete>
	<!-- 获取群信息-->
	<select id="querygroupMessage"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select groupid from PRE_COMMON_GROUP where SHANGHUIID = #{shid} and HOSTNAME = 0 and GROUPTYPE IN (2,3)
	</select>
	<!-- 修改商会信息(groupid) -->
	<update id="updateShanghuiByGroupid" parameterType="java.util.HashMap">
			update  PRE_COMMON_SHANGHUI set GROUPID = #{groupid} where SHID = #{shanghuiid}
	</update>
	<!-- 删除群用户-->
	<delete id="deleteGroupuser" parameterType="java.util.HashMap" >
		delete from PRE_COMMON_GROUP_MEMBERS where GROUPID = #{groupid}
	</delete>
	<!-- 删除群成员约束管理表 -->
	<delete id="deleteGroupChat" parameterType="java.util.HashMap" >
		delete from PRE_COMMON_GROUP_CHAT where SHANGHUIID = #{shid}
	</delete>
	<!-- 删除群聊天信息 -->
	<delete id="deleteGroupMessage" parameterType="java.util.HashMap" >
		delete from PRE_COMMON_GROUP_MESSAGE where GROUPID = #{groupid}
	</delete>
	<!-- 新增商会和分类关联 -->
	<insert id="insertShCate" parameterType="java.util.HashMap">
		insert into PRE_OAM_CATEGORYORSHANGHUI (SHANGHUIID,CATEGORYID) values (#{shanghuiid},#{categoryid})
	</insert>
	<!-- 删除商会分类关联 -->
	<delete id="deleteShCate" parameterType="java.util.HashMap">
		delete from PRE_OAM_CATEGORYORSHANGHUI where SHANGHUIID = #{shanghuiid}
	</delete>
	<!-- 更新分类根节点ID -->
	<update id="updatecategorybynodeid" parameterType="java.util.HashMap" >
		update PRE_OAM_CATEGORY set NODEID = #{nodeid} where ID = #{nodeid}
	</update>
	<!-- 根据商会id删除用户-->
	<update id="deleteUser" parameterType="java.util.HashMap">
		update PRE_COMMON_SECRETARY set STATUS = 0 WHERE SHANGHUIID = #{shid} and LOGINTYPE = 1 
	</update>
	<!-- 删除用户关联数据——职位表 -->
	<delete id="deleterelation" parameterType="java.util.HashMap" >
		delete from PRE_AL_MEMBERRELATION where SHANGHUIID = #{shid} 
	</delete>
	<!-- 删除用户关联数据——商会激活表 -->
	<delete id="deleteshmember" parameterType="java.util.HashMap" >
		delete from PRE_AL_SHMEMBER where SHANGHUIID = #{shid}
	</delete>
	<!-- 获取商会通知信息 -->
	<select id="querynoticesMessage"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select group_concat(NID) as 'nid' from PRE_COMMON_NOTICE where SHANGHUIID = #{shid}
	</select>
	<!-- 获取通知投票信息 -->
	<select id="queryvoteMessage"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select group_concat(VOTEID) as 'voteid' from PRE_COMMON_VOTE where ACTIVITYID in (#{nid})
	</select>
	<!-- 删除商会通知 -->
	<delete id="deleteNotics" parameterType="java.util.HashMap">
		delete from PRE_COMMON_NOTICE where SHANGHUIID = #{shid}
	</delete>
	<!-- 删除商会通知状态 -->
	<delete id="deleteNoticsVSV" parameterType="java.util.HashMap">
		delete from PRE_COMMON_NOTICE_VSV where NOTICEID in (#{nid})
	</delete>
	<!-- 删除商会通知投票信息 -->
	<delete id="deleteNoticsVote" parameterType="java.util.HashMap">
		delete from PRE_COMMON_VOTE where ACTIVITYID in (#{nid}) 
	</delete>
	<!-- 删除商会通知投票选项卡 -->
	<delete id="deleteNoticsVoteOption" parameterType="java.util.HashMap">
		delete from PRE_COMMON_VOTE_OPTION where VOTEID in (#{voteid}) 
	</delete>
	<!-- 删除商会通知投票状态 -->
	<delete id="deleteNoticsVoteSelect" parameterType="java.util.HashMap">
		delete from PRE_COMMON_VOTESELECT where NOTICEID in (#{nid}) 
	</delete>
	<!-- 删除商会通告 -->
	<delete id="deleteNoticeFiAction" parameterType="java.util.HashMap">
		delete from pre_common_notification where SHID = #{shid}
	</delete>
	<!-- 删除商会通告信息 -->
	<delete id="deleteNoticeFiActionView" parameterType="java.util.HashMap">
		delete from PRE_COMMON_NOTIFICT_VIEW where SHANGHUIID = #{shid}
	</delete>
	<!-- 删除商会问题反馈 -->
	<select id="queryquestionMessage"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select group_concat(QUESTIONID) as 'questionid' from PRE_COMMON_QUESTION where SHID = #{shid}
	</select>
	<!-- 删除商会问题 -->
	<delete id="deleteQuestion" parameterType="java.util.HashMap">
		delete from PRE_COMMON_NOTIFICT_VIEW where SHANGHUIID = #{shid}
	</delete>
	<!-- 删除商会问题反馈信息-->
	<delete id="deleteQuestion_replay" parameterType="java.util.HashMap">
		delete from PRE_COMMON_QUESTION_REPLY where QUESTIONID in (#{questionid}) 
	</delete>
	<!-- 根据商会id获取分类信息 -->
	<select id="queryshanghuiofcategory"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT poa.`name`,poa.id from PRE_OAM_CATEGORY poa,PRE_OAM_CATEGORYORSHANGHUI poc WHERE poa.ID = poc.CATEGORYID AND poc.SHANGHUIID = #{shid}
	</select>
	<select id="queryCategorytolevel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select id,
				name,
				fatherid,
				createid,
				createdate,
				updateid,
				updatedate,
				state,
				level,
				nodeid
		 from PRE_OAM_CATEGORY  where ID = #{fatherid}
	</select>
	<select id="queryCategorytolevelbyid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select id,
				name,
				fatherid,
				createid,
				createdate,
				updateid,
				updatedate,
				state,
				level,
				nodeid
		 from PRE_OAM_CATEGORY  where ID = (select FATHERID from PRE_OAM_CATEGORY where ID = #{id})
	</select>
	<update id="updatecategorybylevel" parameterType="java.util.HashMap">
		update PRE_OAM_CATEGORY set LEVEL = (LEVEL-#{level}) 
		where ID in (${ids})
	</update>
	<update id="updateGSL" parameterType="java.util.HashMap">
		update PRE_OAM_CATEGORY_COMMERCIAL set CAID = #{caid} where GOID = #{id}
	</update>
	<!-- 查询同根 -->
	<select id="queryCategorybynodeid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		 select id,
				name,
				fatherid,
				createid,
				DATE_FORMAT(createdate, '%Y-%m-%d %k:%i:%s') createdate,
				updateid,
				state,
				level,
				nodeid
		 from PRE_OAM_CATEGORY  where NODEID = #{nodeid} 
	</select>
</mapper>