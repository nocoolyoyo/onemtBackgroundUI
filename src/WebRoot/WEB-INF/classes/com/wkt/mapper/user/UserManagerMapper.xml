<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wkt.dao.user.IUserManagerDao">
	
	<!-- 获取所有用户信息列表 -->
	<select id="findAllUserInfoLists" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.usid as id,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			IFNULL((select yw.weightsnum from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1),0) weight,
			t.createdate,
<!-- 			t.logintype, -->
			t.user_v userv,
<!-- 			ifnull((select yd.name  from yj_commmon_dict yd where yd.code = t.auth_type and yd.type =7),'') auth_type -->
			ifnull(t.companywork, '') companywork,
			t.image,
<!-- 			(SELECT yal.creat_time FROM yj_app_log yal WHERE yal.method = 'login' and yal.user_id = t.usid	ORDER BY yal.creat_time DESC LIMIT 1 ) lastlogintime, -->
<!-- 			( select pc.image from PRE_SHAPP_COMPANY_CERTIFITION pc  where t.usid = pc.usid order by pc.SATRTTIME desc LIMIT 1) auth_image,  -->
<!-- 			ifnull( (select pc.STATUS from PRE_SHAPP_COMPANY_CERTIFITION pc where t.usid = pc.usid order by pc.SATRTTIME desc LIMIT 1) , '0') isAuth,  -->
			t.is_auth isAuth,
			t.mstatus logintype,
			yd.name auth_type,
			t.update_time,
			weight_id
		FROM
			PRE_AL_MEMBER t
<!-- 			LEFT JOIN PRE_SHAPP_COMPANY_CERTIFITION pc ON t.usid = pc.usid -->
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where 1=1
		 and t.AVAILABLE = 0  
		<if test="isAuth !=null and isAuth !=''">
			<if test = "isAuth == 1 ">
				and is_auth = #{isAuth}
			</if>
			<if test = "isAuth != 1 ">
				and (t.is_auth is null or t.is_auth != 1)
			</if>
		</if>
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		<if test="weight !=null and weight !=''">
			and t.weight_id = #{weight}
<!-- 			and t.weight = (select yw.weightsnum from yj_yy_weights yw where yw.id = #{weight} and yw.status = 1) -->
<!-- 			<if test="weight == 1"> -->
<!-- 				and t.weight between 0 and 20 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 2"> -->
<!-- 				and t.weight between 21 and 40 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 3"> -->
<!-- 				and t.weight between 41 and 60 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 4"> -->
<!-- 				and t.weight between 61 and 80 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 5"> -->
<!-- 				and t.weight between 81 and 100 -->
<!-- 			</if> -->
		</if>
		<if test="logintype !=null and logintype !=''">
			and t.mstatus = #{logintype}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		order by t.createdate desc 
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取所有用户信息总数 -->
	<select id="findAllUserInfoCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*) 
		FROM
			PRE_AL_MEMBER t
<!-- 			LEFT JOIN PRE_SHAPP_COMPANY_CERTIFITION pc ON t.usid = pc.usid -->
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where 1=1
		 and t.AVAILABLE = 0  
		<if test="isAuth !=null and isAuth !=''">
			<if test = "isAuth == 1 ">
				and is_auth = #{isAuth}
			</if>
			<if test = "isAuth != 1 ">
				and (t.is_auth is null or t.is_auth != 1)
			</if>
		</if>
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		
		<if test="weight !=null and weight !=''">
			and t.weight_id = #{weight}
<!-- 			and t.weight = (select yw.weightsnum from yj_yy_weights yw where yw.id = #{weight} and yw.status = 1) -->
<!-- 			<if test="weight == 1"> -->
<!-- 				and t.weight between 0 and 20 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 2"> -->
<!-- 				and t.weight between 21 and 40 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 3"> -->
<!-- 				and t.weight between 41 and 60 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 4"> -->
<!-- 				and t.weight between 61 and 80 -->
<!-- 			</if> -->
<!-- 			<if test="weight == 5"> -->
<!-- 				and t.weight between 81 and 100 -->
<!-- 			</if> -->
		</if>
		<if test="logintype !=null and logintype !=''">
			and t.mstatus = #{logintype}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
	</select>
	
	<!-- 新增用户信息 -->
	<insert id="addUserInfo" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="usid">
		INSERT INTO PRE_AL_MEMBER (
			image,
			realname,
			username,
			UPASSWORD,
			MSTATUS,
			mobile,
			weight,
			user_v,
			auth_type,
			company,
			reside,
			nativeinfo,
			position,
			COMPANYWORK,
			companyaddress,
			companyintroduction,
			createdate,
			is_auth
			<if test="nativeinfo_id != null and nativeinfo_id != ''">
				,NATIVEINFO_ID
			</if>
			<if	test="weight_id != null and weight_id != ''">
				,weight_id
			</if>
			<if test="reside_id != null and reside_id != ''">
				,RESIDE_ID
			</if>
			<if test="birthday !=null and birthday != ''">
				,BIRTHDAY
			</if>
			<if test="street != null and street != ''">
				,COMPANYADDRESS_STREET
			</if>
			<if test="companyaddress_id != null and companyaddress_id != ''">
				,COMPANYADDRESS_ID
			</if>
			<if test="companyweb != null and companyweb != ''">
				,COMPANYWEB
			</if>
		) values (
			#{image},
			#{realname},
			#{username},
			#{password},
			0,
			#{mobile},
			#{weight},
			#{userv},
			#{auth_type},
			#{company},
			#{reside},
			#{nativeinfo},
			#{position},
			#{companywork},
			#{companyaddress},
			#{companyintroduction},
			now(),
			#{isAuth}
			<if test="nativeinfo_id != null and nativeinfo_id != ''">
				,#{nativeinfo_id}
			</if>
			<if	test="weight_id != null and weight_id != ''">
				,#{weight_id}
			</if>
			<if test="reside_id != null and reside_id != ''">
				,#{reside_id}
			</if>
			<if test="birthday !=null and birthday != ''">
				,#{birthday}
			</if>
			<if test="street != null and street != ''">
				,#{street}
			</if>
			<if test="companyaddress_id != null and companyaddress_id != ''">
				,#{companyaddress_id}
			</if>
			<if test="companyweb != null and companyweb != ''">
				,#{companyweb}
			</if>
		)
	</insert>
	
	<update id="updateUserInfo" parameterType="java.util.HashMap">
		update PRE_AL_MEMBER set image = #{image},realname = #{realname},weight = ${weight},user_v = ${userv},auth_type = ${auth_type},is_auth = ${isAuth},company = #{company} 
		,reside = #{reside},nativeinfo = #{nativeinfo},position = #{position},COMPANYWEB = #{companyweb},companyaddress = #{companyaddress},COMPANYWORK = #{companywork} ,companyintroduction = #{companyintroduction}
		<if test="mobile != null and mobile != ''">
			,mobile= #{mobile}
		</if>
		<if	test="weight_id != null and weight_id != ''">
			,weight_id = #{weight_id}
		</if>
		<if test="birthday !=null and birthday != ''">
			,BIRTHDAY = #{birthday}
		</if>
		<if test="nativeinfo_id != null and nativeinfo_id != ''">
			,NATIVEINFO_ID = #{nativeinfo_id}
		</if>
		<if test="reside_id != null and reside_id != ''">
			,RESIDE_ID = #{reside_id}
		</if>
		<if test="companyaddress_id != null">
			,COMPANYADDRESS_ID = #{companyaddress_id}
		</if>
		<if test="street != null">
				,COMPANYADDRESS_STREET = #{street}
		</if>
		
		where usid = #{usid}
	</update>
	
	<!-- 获取用户动态 -->
	<select id="getUserDynamic" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!-- 		SELECT -->
<!-- 			t.id, -->
<!-- 			t.title, -->
<!-- 			t.summary, -->
<!-- 			t.obj_id objid, -->
<!-- 			t.create_time, -->
<!-- 			t.obj_type objtype, -->
<!-- 			t.author_id authorid -->
<!-- 		FROM -->
<!-- 			yj_feed t -->
<!-- 		where  t.author_id = #{usid} -->
<!-- 		AND t.`status` = 1 -->
<!-- 		order by t.create_time desc -->
		SELECT
			id,
			IFNULL(title,'') title,
			IFNULL(summary,'') summary,
			IFNULL(image,'') image,
			IFNULL(extra,'') extra,
			IFNULL(obj_id,'') obj_id,
			IFNULL(obj_type,'') obj_type,
			IFNULL(filter,'') filter,
			IFNULL(author_id,'') author_id,
			IFNULL(author_name,'') author_name,
			IFNULL(author_type,'') author_type,
			IFNULL(display_type,'') display_type,
			create_time,
			(SELECT	COUNT(*) FROM yj_common_zan z WHERE	z.`status` = 1 AND z.obj_id = yf.id	AND z.obj_type = if(yf.obj_type=28,15,yf.obj_type)
 and z.user_id= #{usid} ) is_zan
		FROM
			yj_feed yf
		WHERE
			author_id = #{usid}
		AND author_type = 0
		AND yf.`status` = 1
		AND yf.obj_type in (26,27,28,29,30,31,32,33,34,35,36,38)
		ORDER BY create_time DESC
	</select>
	
	<!-- 插入推送用户 -->
	<insert id="pushUserInfo" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap">
		INSERT INTO yj_feed (
				title,
				summary
				,image
				,extra
				,obj_id
				,obj_type
				,filter
				,author_id
				,author_name
				,author_type
				,create_time


			)
			VALUES
				(#{title},
				#{summary}
				,#{image}
				,#{extra}
				,${objid}
				,${objtype}
				,${filter}
				,${authorid}
				,#{authorname}
				,${authortype}
				,${create_time}
				)
				
<!-- 			<selectKey resultType="int" order="AFTER" keyProperty="id"> -->
<!-- 				 SELECT MAX(id) AS id from yj_feed -->
<!-- 			 </selectKey> -->
	</insert>
	
	<!-- 插入临时筛选条件 -->
	<insert id="insertFeedFilterTemp" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap" >
		insert into yj_feed_filter_tmp
		(
			feed_id,
			filter,
			display_position,
			start_time,
			end_time,
			create_time,
			type,
			obj_id,
			obj_type
		) values
		(
			${feedid},
			${filter},
			${displayposition},
			${starttime},
			${endtime},
			${createtime},
			${type},
			${objid},
			${objtype}
		)
	</insert>
	
	<!-- 额外推送信息保存 -->
	<insert id="insertFeedTempInfo" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap">
		insert into yj_feed_temp_feedinfo
		(
			<if test="feedid != null and feedid != ''">
				feed_id,
			</if>
			<if test="openposition != null and openposition != ''">
				open_position,
			</if>
			<if test=" shanghui !=null and shanghui !=''">
				sh_ids,
			</if>
			<if test="shanghuinames!=null and shanghuinames!=''">
				sh_names,
			</if>
			<if test="industry!=null and industry!=''">
				industry_ids,
			</if>
			<if test="industrynames!=null and industrynames!=''">
				industry_names,
			</if>
			<if test="region!=null and region!=''">
				region_ids,
			</if>
			<if test="regionnames!=null and regionnames!=''">
				region_names,
			</if>
			<if test="nativeplace!=null and nativeplace!=''">
				nativeplace_ids,
			</if>
			<if test="nativeplacenames!=null and nativeplacenames!=''">
				nativeplace_names,
			</if>
			<if test="usergroup!=null and usergroup!=''">
				usergroup_ids,
			</if>
			<if test="usergroupnames!=null and usergroupnames!=''">
				usergroup_names,
			</if>
			<if test="user!=null and user!=''">
				user_ids,
			</if>
			<if test="usernames!=null and usernames!=''">
				user_names,
			</if>
			
			<if test="circle!=null and circle!=''">
				circle_ids,
			</if>
			
			<if test="circlenames!=null and circlenames!=''">
				circle_names,
			</if>
			<if test="smalltop!=null and smalltop != ''">
				small_top,
			</if>
			<if test="bigtop != null and bigtop != ''">
				big_top,
			</if>
			<if test="ispushtype != null and ispushtype != ''">
				is_push_type,
			</if>
			<if test="title != null and title != ''">
				title,
			</if>
			<if test="content != null and content != ''">
				content,
			</if>
			<if test="state != null and state != ''">
				state,
			</if>
			<if test="objid !=null and objid !=''">
				obj_id,
			</if>
			<if test="objtype !=null and objtype !=''">
				obj_type,
			</if>
			create_time,
			author_id,
			author_name,
			all_user
		) values
		(
			<if test="feedid != null and feedid != ''">
				${feedid},
			</if>
			<if test="openposition != null and openposition != ''">
				${openposition},
			</if>
			<if test=" shanghui !=null and shanghui !=''">
			#{shanghui},
			</if>
			<if test="shanghuinames!=null and shanghuinames!=''">
			#{shanghuinames},
			</if>
			<if test="industry!=null and industry!=''">
			#{industry},
			</if>
			<if test="industrynames!=null and industrynames!=''">
			#{industrynames},
			</if>
			<if test="region!=null and region!=''">
			#{region},
			</if>
			<if test="regionnames!=null and regionnames!=''">
			#{regionnames},
			</if>
			<if test="nativeplace!=null and nativeplace!=''">
			#{nativeplace},
			</if>
			<if test="nativeplacenames!=null and nativeplacenames!=''">
			#{nativeplacenames},
			</if>
			<if test="usergroup!=null and usergroup!=''">
			#{usergroup},
			</if>
			<if test="usergroupnames!=null and usergroupnames!=''">
			#{usergroupnames},
			</if>
			<if test="user!=null and user!=''">
			#{user},
			</if>
			<if test="usernames!=null and usernames!=''">
			#{usernames},
			</if>
			
			<if test="circle!=null and circle!=''">
			#{circle},
			</if>
			
			<if test="circlenames!=null and circlenames!=''">
			#{circlenames},
			</if>
			<if test="smalltop!=null and smalltop != ''">
				${smalltop},
			</if>
			<if test="bigtop != null and bigtop != ''">
				${bigtop},
			</if>
			<if test="ispushtype != null and ispushtype != ''">
				${ispushtype},
			</if>
			<if test="title != null and title != ''">
				#{title},
			</if>
			<if test="content != null and content != ''">
				#{content},
			</if>
			<if test="state != null and state != ''">
				${state},
			</if>
			<if test="objid !=null and objid !=''">
				${objid},
			</if>
			<if test="objtype !=null and objtype !=''">
				${objtype},
			</if>
			${createtime},
			${authorid},
			#{authorname},
			${alluser}
		)
	</insert>
	
	<!-- 插入信息流筛选条件对应用户 -->
	<insert id="insertFeedFilterUser" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap" >
		insert into yj_feed_filter_user
		(
			filter,
			user_id
		) values
		(
			#{filter},
			${usid}
		)
	</insert>
	
	
	<!-- 删除用户信息 -->
	<update id="delUserInfo" parameterType="java.util.HashMap">
		update PRE_AL_MEMBER set AVAILABLE = 2,update_time = now(),delete_reason = #{delete_reason} where usid = #{usid}
	</update>
	
	<!-- 获取待认证用户信息列表 -->
	<select id="findPendingAuthUserInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			IFNULL((select yw.weightsnum from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1),0) weight,
			t.createdate,
			t.mstatus logintype,
			t.user_v userv,
			t.image,
			ifnull(t.companywork, '') companywork,
			t.is_auth isAuth,
			yd.name auth_type,
			t.update_time
		FROM
			PRE_AL_MEMBER t
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where t.is_auth in (3,4) and t.AVAILABLE = 0
		
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="isAuth !=null and isAuth !=''">
			and is_auth = #{isAuth}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		order by t.update_time desc,t.createdate desc  
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取待认证用户信息总数 -->
	<select id="findPendingAuthUserInfoCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*)
		FROM
			PRE_AL_MEMBER t
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where t.is_auth in (3,4)  and t.AVAILABLE = 0
		
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="isAuth !=null and isAuth !=''">
			and is_auth = #{isAuth}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
	</select>
	
	<!-- 根据用户ID获取用户信息 -->
	<select id="getUserInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.image,
			ifnull(t.reside,'') reside,
			ifnull(t.nativeinfo,'') nativeinfo,
			ifnull(t.companyaddress,'') companyaddress,
			t.companyintroduction,
			t.usid,
			t.username,
			ifnull(t.realname, '') realname,
			t.mobile,
			t.position,
			t.company,
			ifnull(t.weight_id,'') weight,
			ifnull((select yw.weightsname from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1 ),'') weight_name,
			t.createdate,
			t.mstatus logintype,
			t.user_v userv,
			ifnull(t.companywork, '') companywork,
			t.is_auth isAuth,
			ifnull((select yd.id  from yj_common_dict yd where yd.code = t.auth_type and yd.type =7),'') auth_type,
			ifnull((select yd.name  from yj_common_dict yd where yd.code = t.auth_type and yd.type =7),'') auth_type_name,
			ifnull(t.nativeinfo_id,'') nativeinfo_id,
			ifnull(t.reside_id,'') reside_id,
			ifnull(t.companyaddress_id,'') companyaddress_id,
			t.COMPANYADDRESS_STREET street,
			t.companyweb,
			date_format(t.BIRTHDAY,'%Y-%m-%d') birthday,
			t.REGISTRATIONID registrationid,
			(SELECT
				GROUP_CONCAT(CONCAT(s.SHNAME,' ',o.ONAME)separator';') shOccupation
			FROM
				pre_al_memberrelation t
			LEFT JOIN pre_common_occupation o ON o.SHANGHUIID = t.SHANGHUIID
			AND o.OCCUPATIONID = t.OCCUPATIONID
			left join pre_common_shanghui s on s.SHID = t.SHANGHUIID
			WHERE
				t.USERNAME = (select USERNAME from pre_al_member where USID = ${usid}))  shOccupation
		FROM
			PRE_AL_MEMBER t
		where t.usid = ${usid}
	</select>
	
	<!-- 更新会员表的认证 -->
	<update id="updateUserV" parameterType="java.util.HashMap" >
		update PRE_AL_MEMBER set user_v = ${userv},auth_type = #{auth_type},is_auth = #{is_auth},update_time = now() where usid = ${usid}
	</update>
	
	<!-- 更新会员的认证结果 -->
	<update id="updateUserStatus" parameterType="java.util.HashMap" >
		update PRE_SHAPP_COMPANY_CERTIFITION set status = ${status} where usid = ${usid}
	</update>
	
	<!-- 更改认证材料信息 -->
	<update id="updateAuthUserInfo" parameterType="java.util.HashMap" >
		update PRE_SHAPP_COMPANY_CERTIFITION set IMAGE = #{auth_image} where pc.USID =  ${usid}
	</update>
	
	<!-- 根据用户ID获取用户认证材料信息 -->
	<select id="getAuthUserInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from PRE_SHAPP_COMPANY_CERTIFITION t where t.USID =  ${usid}  order by t.satrttime desc limit 1
	</select>
	
	<delete id="delAuthUserInfo" parameterType="java.util.HashMap">
		delete  from  PRE_SHAPP_COMPANY_CERTIFITION where USID = #{usid}
	</delete>
	
	<!-- 插入认证材料 -->
	<insert id="insertAuthUserInfo" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap" >
		INSERT INTO PRE_SHAPP_COMPANY_CERTIFITION (
			USID,
			IMAGE,
			SATRTTIME,
			STATUS,
			TYPE
		)
		VALUES
			(${usid},#{auth_image},now(),${isAuth},1)
	</insert>
	
	
	<!-- 获取非推荐大咖用户信息列表 -->
	<select id="findNotBigshotUserInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			t.weight,
			t.createdate,
			t.logintype,
			t.user_v userv,
			t.image,
			ifnull(t.companywork, '') companywork,
			(SELECT yal.creat_time FROM yj_app_log yal WHERE yal.method = 'login' and yal.user_id = t.usid	ORDER BY yal.creat_time DESC LIMIT 1 ) lastlogintime
		FROM
			PRE_AL_MEMBER t
	    where   t.weight > 40 and t.AVAILABLE = 0
					and not exists (
						select * from yj_member_bigshot yb 
					) 
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		order by t.createdate desc  
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取非推荐大咖用户信息总数 -->
	<select id="findNotBigshotUserInfoCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*)
		FROM
			PRE_AL_MEMBER t
	    where   t.weight > 40 and t.AVAILABLE = 0
					and not exists (
						select * from yj_member_bigshot yb 
					) 
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
	</select>
	
	
	<!-- 获取推荐大咖用户信息列表 -->
	<select id="findBigshotUserInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			IFNULL((select yw.weightsnum from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1),0) weight,
			t.createdate,
			t.logintype,
			t.user_v userv,
			ifnull(t.companywork, '') companywork,
			(SELECT yal.create_time FROM yj_app_log yal WHERE yal.method = 'login' and yal.user_id = t.usid	ORDER BY yal.create_time DESC LIMIT 1 ) lastlogintime,
			t.is_auth isAuth,
			t.update_time,
			b.reorder
		FROM
			PRE_AL_MEMBER t,yj_member_bigshot b
		where  t.usid = b.user_id  and b.status = 1 and t.AVAILABLE = 0
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		order by t.createdate desc  
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取推荐大咖用户信息总数 -->
	<select id="findBigshotUserInfoCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*)
		FROM
			PRE_AL_MEMBER t,yj_member_bigshot b
	where  t.usid = b.user_id  and b.status = 1 and t.AVAILABLE = 0
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
	</select>
	
	<!-- 新增推荐大咖用户信息 -->
	<insert id="addBigshotUserInfo" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO yj_member_bigshot 
			(user_id, create_time, STATUS,reorder)
		VALUES
			(${usid},${createtime},1,${weight})
	</insert>
	
	<!-- 删除推荐用户信息 -->
	<update id="delBigshotUserInfo" parameterType="java.util.HashMap">
		update yj_member_bigshot set status = 2 where user_id = #{usid}
	</update>
	
	<!-- 根据用户ID获取推荐大咖信息 -->
	<select id="findBigshotUserInfobyid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from yj_member_bigshot t where t.`status` = 1 and t.user_id = #{usid}
	</select>
	
	<!-- 获取垃圾箱用户信息列表 -->
	<select id="findDustbinUserInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			IFNULL((select yw.weightsnum from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1),0) weight,
			t.createdate,
			t.mstatus logintype,
			t.user_v userv,
			ifnull(t.companywork, '') companywork,
			yd.name auth_type,
			t.is_auth isAuth,
			t.update_time,
			t.delete_reason
		from
			PRE_AL_MEMBER t
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where t.available = 2
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		order by t.update_time desc, t.createdate desc 
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取垃圾箱用户信息总数 -->
	<select id="findDustbinUserInfoCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*)
		from	
			PRE_AL_MEMBER t
		where t.available = 2 
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
	</select>
	
	<!-- 恢复垃圾箱用户信息 -->
	<update id="delDustbinUserInfo" parameterType="java.util.HashMap">
		update PRE_AL_MEMBER set AVAILABLE = 0 where usid = #{usid}
	</update>
	
	<!-- 查询推送用户信息 -->
	<select id="getPushUserInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.USID id,
			m.REALNAME name,
			m.USER_V v,
			m.IMAGE img,
		(CASE t.type
		WHEN 1 THEN
			concat(s.SHNAME, o.ONAME) 
		WHEN 2 THEN
			concat(t.COMPANY, t.COMPANYWORK) end) sh_post
		FROM
			PRE_SHAPP_MEMBER_DETAIL t
		LEFT JOIN PRE_COMMON_SHANGHUI s ON t.SHID = s.SHID
		AND s.`STATUS` = 1
		LEFT JOIN PRE_COMMON_OCCUPATION o ON t.OID = o.OID
		AND o.`STATUS` = 1
		LEFT JOIN PRE_AL_MEMBER m ON t.USID = m.USID
		WHERE
			t.USID = ${usid}
	</select>
	
	<!-- 根据权重字典表ID获取权重值-->
	<select id="findWeightsDictById" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from yj_yy_weights t where t.id = #{id} and status = 1
	</select>
	
	<!-- 根据字典表ID获取认证方式-->
	<select id="findUservDictById" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from yj_common_dict t where t.id = #{id}
	</select>
	
	<!-- 根据字典表ID获取认证方式-->
	<select id="findUserInfobyMobile" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from PRE_AL_MEMBER t where t.MOBILE = #{mobile}
	</select>
	
	<!-- 新增行业 -->
	<insert id="insertUserInstry" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap">
		INSERT INTO PRE_COMMON_USER_INDUSTRY (
			USID,
			INDUSTRY,
			STATE,
			CREATE_DATE
			<if test="industry_id != null and industry_id != ''">
				,INDUSTRY_ID
			</if>
		)
		VALUES
			(
				#{user_id}, 
				#{industry},
				1,
				now()
				<if test="industry_id != null and industry_id != ''">
					,#{industry_id}
				</if>
			)
	</insert>
	<!-- 删除会员行业 -->
	<update id="deleteUserIndustry" parameterType="java.util.HashMap">
		UPDATE
			PRE_COMMON_USER_INDUSTRY
		SET STATE = 2,
			UPDATE_DATE = NOW()		
		WHERE
		<if test="user_id != null and user_id != ''">
			USID = ${user_id}
		</if>
	</update>
	
	<!-- 新增用户时新增认证状态 -->
	<insert id="insertUserAuth" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.HashMap">
		INSERT INTO PRE_SHAPP_COMPANY_CERTIFITION (
			USID,
			SATRTTIME,
			STATUS
		)
		VALUES
			(
				#{user_id}, 
				now(),
				1
			)
	</insert>
	
	<!-- 根据用户ID获取行业-->
	<select id="findUserIndustryById" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select t.industry,t.industry_id from PRE_COMMON_USER_INDUSTRY t where t.USID = #{usid} AND  t.STATE = 1
	</select>
	
	<!-- 昨日新增人数 -->
	<select id="findStatisticsDayNewUserCount" parameterType="java.util.HashMap" resultType="Integer">
		select count(*) from PRE_AL_MEMBER t where DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m-%d')
	</select>
	
	<!-- 本月新增人数 -->
	<select id="findStatisticsMonthNewUserCount" parameterType="java.util.HashMap" resultType="Integer">
		select count(*) from PRE_AL_MEMBER t where DATE_FORMAT(t.CREATEDATE,'%Y-%m') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m')
	</select>
	
	<!-- 线形图数据查询 -->
	<select id="findStatisticsNewUserCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			count(*) total,
			DATE_FORMAT(a.CREATEDATE, '%Y-%m-%d') create_time
		FROM
			PRE_AL_MEMBER a
		WHERE
			DATE_FORMAT(a.CREATEDATE, '%Y-%m-%d') BETWEEN #{start_time} and #{end_time}
		 GROUP BY
			create_time
	</select>
	
	<!-- 获取新增用户信息列表 -->
	<select id="findNewUserInfoLists" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			t.usid,
			t.usid as id,
			t.username,
			t.realname,
			t.mobile,
			t.position,
			t.company,
			IFNULL((select yw.weightsname from yj_yy_weights yw where yw.id = t.weight_id and yw.status = 1),0) weight,
			t.createdate,
			t.user_v userv,
			ifnull(t.companywork, '') companywork,
			t.image,
			t.is_auth isAuth,
			t.mstatus logintype,
			yd.name auth_type,
			t.update_time,
			weight_id
		FROM
			PRE_AL_MEMBER t
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where 1=1
		 and t.AVAILABLE = 0  
		 <if test="search_type != null and search_type != '' ">
		 	<if test = "search_type == 1">
		 		and DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m-%d')
		 	</if>
		 	<if test = "search_type == 2">
		 		and DATE_FORMAT(t.CREATEDATE,'%Y-%m') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m')
		 	</if>
		 </if>
		 <if test ="start_create_time != null and  start_create_time != ''">
		 	 and  DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') >= #{start_create_time}
		 </if>
		 <if test ="end_create_time != null and  end_create_time != ''">
		 	<![CDATA[ and DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') <=#{end_create_time} ]]> 
		 </if>
		<if test="isAuth !=null and isAuth !=''">
			<if test = "isAuth == 1 ">
				and is_auth = #{isAuth}
			</if>
			<if test = "isAuth != 1 ">
				and (t.is_auth is null or t.is_auth != 1)
			</if>
		</if>
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		<if test="weight !=null and weight !=''">
			and t.weight_id = #{weight}
		</if>
		<if test="logintype !=null and logintype !=''">
			and t.mstatus = #{logintype}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		order by t.createdate desc 
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 获取新增用户信息数量 -->
	<select id="findNewUserInfoListsCount" parameterType="java.util.HashMap" resultType="Integer">
		SELECT
			count(*)
		FROM
			PRE_AL_MEMBER t
			left join yj_common_dict yd on yd.code = t.auth_type and yd.type =7
		where 1=1
		 and t.AVAILABLE = 0  
		 <if test="search_type != null and search_type != '' ">
		 	<if test = "search_type == 1">
		 		and DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m-%d')
		 	</if>
		 	<if test = "search_type == 2">
		 		and DATE_FORMAT(t.CREATEDATE,'%Y-%m') = DATE_FORMAT(date_sub(NOW(),interval 1 day),'%Y-%m')
		 	</if>
		 </if>
		 <if test ="start_create_time != null and  start_create_time != ''">
		 	 and  DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') >= #{start_create_time}
		 </if>
		 <if test ="end_create_time != null and  end_create_time != ''">
		 	<![CDATA[ and DATE_FORMAT(t.CREATEDATE,'%Y-%m-%d') <=#{end_create_time} ]]> 
		 </if>
		<if test="isAuth !=null and isAuth !=''">
			<if test = "isAuth == 1 ">
				and is_auth = #{isAuth}
			</if>
			<if test = "isAuth != 1 ">
				and (t.is_auth is null or t.is_auth != 1)
			</if>
		</if>
		<if test="userv !=null and userv !=''">
			and t.user_v = #{userv}
		</if>
		<if test="auth_type !=null and auth_type !=''">
			and yd.id = #{auth_type}
		</if>
		<if test="weight !=null and weight !=''">
			and t.weight_id = #{weight}
		</if>
		<if test="logintype !=null and logintype !=''">
			and t.mstatus = #{logintype}
		</if>
		<if test="realname !=null and realname !=''">
			and t.realname like '%${realname}%'
		</if>
		<if test="mobile !=null and mobile !=''">
			and t.mobile like  '%${mobile}%'
		</if>
		
	</select>
	
	<!-- 用户会话信息 -->
	<select id="findAPPUserLogInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select ifnull(t.image,'') image,t.REALNAME realname,t.COMPANY company,t.COMPANYWORK companywork,(select SUM(b.mins) from (SELECT
	
			TIMESTAMPDIFF(MINUTE ,FROM_UNIXTIME(
				MIN(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			),FROM_UNIXTIME(
				MAX(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			)) mins
		FROM
			yj_app_log t
		where t.user_id = #{user_id}
		GROUP BY
			t.session_id) b) session_duration from PRE_AL_MEMBER t where t.USID = #{user_id}
	</select>
	
	<!-- 用户会话日志信息列表 -->
	<select id="findAPPUserLogInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			
				MAX(t.create_time) end_time,
			
				MIN(t.create_time)  start_time,
			TIMESTAMPDIFF(MINUTE ,FROM_UNIXTIME(
				MIN(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			),FROM_UNIXTIME(
				MAX(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			)) mins,
			t.session_id
		FROM
			yj_app_log t
		where t.user_id = #{user_id}
		GROUP BY
			t.session_id order by end_time desc 
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 用户会话日志信息列表总数 -->
	<select id="findAPPUserLogInfoListCount" parameterType="java.util.HashMap" resultType="Integer">
		select count(*) from ( SELECT
			FROM_UNIXTIME(
				MAX(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			) end_time,
			FROM_UNIXTIME(
				MIN(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			) start_time,
			TIMESTAMPDIFF(MINUTE ,FROM_UNIXTIME(
				MIN(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			),FROM_UNIXTIME(
				MAX(t.create_time) / 1000,
				'%Y-%m-%d %H:%i:%s'
			)) mins,
			t.session_id
		FROM
			yj_app_log t
		where t.user_id = #{user_id}
		GROUP BY
			t.session_id ) b
	</select>
	
	<!-- 用户会话日志信息 -->
	<select id="findAPPUserLogInfoListbySessionId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select id,user_id,user_name,content,create_time from yj_app_log where session_id = #{session_id}
		order by create_time desc
		<if test="y != null and y != '' and y != 0">
			LIMIT ${x},${y}
		</if>
	</select>
	
	<!-- 用户会话日志信息 -->
	<select id="findAPPUserLogInfoListCountbySessionId" parameterType="java.util.HashMap" resultType="Integer">
		select count(*) from yj_app_log where session_id = #{session_id}
		
	</select>
	
	<select id="intoMyCache" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			USID user_id,
			USERNAME username,
			IFNULL(REALNAME,'') user_name,
			GENDER gender,
			IFNULL(BIRTHDAY,'') birthday,
			NATIVEINFO native,
			MOBILE mobile,
			IFNULL(COMPANY,'') company,
			IFNULL(COMPANYADDRESS,'') company_address,
			IFNULL(RESIDE,'') reside,
			IFNULL(EMAIL,'') email,
			IFNULL(COMPANYWORK,'') company_work,
			IFNULL(IMAGE,'') user_avatar,
			IFNULL(REGISTRATIONID,'') registration_id,
			TELTYPE tel_type,
			WEIGHT weight,
			USER_V user_v,
			CODE code,
			COMPANYWEB company_web,
			(SELECT IFNULL(GROUP_CONCAT(INDUSTRY), '') FROM PRE_COMMON_USER_INDUSTRY i WHERE i.USID = m.USID AND i.STATE = 1)  industry, 
			#{user_identity} user_identity,
			token,
			NATIVEINFO_ID native_id,
			RESIDE_ID reside_id
		FROM
			PRE_AL_MEMBER m
		WHERE
			USID = #{user_id}
	</select>
	<select id="queryMemberDetail" parameterType="java.util.HashMap" resultType = "java.util.HashMap">
		SELECT
			d.SHID shid,
			d.OID oid,
			d.type,
			d.COMPANY,
			d.COMPANYWORK,
			(
				SELECT
					IFNULL(s.SHNAME,'')
				FROM
					PRE_COMMON_SHANGHUI s
				WHERE
					s.SHID = d.SHID
				AND s.`STATUS` = 1
			) shname,
			(
				SELECT
					IFNULL(o.ONAME,'')
				FROM
					PRE_COMMON_OCCUPATION o
				WHERE
					o.OID = d.OID
				AND o.`STATUS` = 1
			) oname
		FROM
			PRE_SHAPP_MEMBER_DETAIL d
		WHERE
			d.USID = #{user_id}
	</select>
	
	<!-- 获取用户商会及职务 -->
<!-- 	<select id="findSHOccupationByid" parameterType="java.util.HashMap" resultType = "java.util.HashMap"> -->
<!-- 		SELECT -->
<!-- 			GROUP_CONCAT(CONCAT(s.SHNAME,' ',o.ONAME)separator';') shOccupation -->
<!-- 		FROM -->
<!-- 			pre_al_memberrelation t -->
<!-- 		LEFT JOIN pre_common_occupation o ON o.SHANGHUIID = t.SHANGHUIID -->
<!-- 		AND o.OCCUPATIONID = t.OCCUPATIONID -->
<!-- 		left join pre_common_shanghui s on s.SHID = t.SHANGHUIID -->
<!-- 		WHERE -->
<!-- 			t.USERNAME = (select USERNAME from pre_al_member where USID = #{usid}) -->
<!-- 	</select> -->
	
</mapper>